{
    "name": "Door extension",
    "codename": "ext_door",
    "value": "0",
    "quantity": "0",
    "credits_shop_item": "0",
    "type": "entity_extension_items_client",
    "color": null,
    "editedtime": null,
    "vars": {
        "events": {
            "onCreate": "function(item, options) {\r\n\r\n  let x = game.gridPos(item.x);\r\n  let y = game.gridPos(item.y);\r\n\r\n  item.data.closed = true;\r\n\r\n  item.data.locked = typeof item.data.locked !== 'undefined' ? item.data.locked : true;\r\n\r\n  game.offloader.addToIndex('doors', item, x + '_' + y); \/\/Add to index so we can find doors\r\n\r\n  item.sync();\r\n  \/*\r\n  item.contextMenus = {};\r\n    item.contextMenus['Open'] = function (caller) {\r\n      if(game.world.cDistance(game.p, caller)>115) {\r\n          game.input.mouseMsg('Too far away');\r\n        } else {\r\n          delete caller.contextMenus['Open'];\r\n          if(caller.data.block == false) {\r\n            game.tween(caller, 'doorCloseX');\r\n            caller.data.block = true;\r\n          } else {\r\n            game.tween(caller, 'doorOpenX');\r\n            caller.data.block = false;\r\n          }\r\n\r\n          caller.sync();\r\n          \/\/Do hackage\r\n    }\r\n  }\r\n  *\/\r\n\r\n  if (item.data.usedata1 == 'unlocked') {\r\n    item.data.locked = false;\r\n  }\r\n\r\n  let lightSpright = item.data.locked ? 'container_2_lightred' : 'container_2_light';\r\n\r\n  var myLight = new Sprite(lightSpright, { anchor: 'center' });\r\n  myLight.x = item.width \/ 2;\r\n  myLight.y = item.height \/ 2 + 15;\r\n  myLight.x -= 10;\r\n  myLight.y -= 8;\r\n  myLight.filters = [game.render.filters.bloom]\r\n\r\n  item.addChild(myLight);\r\n  item.light = myLight;\r\n\r\n  var myLight = new Sprite('lightcookie_oval', { anchor: 'center' });\r\n  myLight.x = item.x + (item.width \/ 2);\r\n  myLight.y = item.y + (item.height \/ 2) + 15;\r\n\r\n  game.render.lights.addChild(myLight);\r\n\r\n\r\n  item.unlock = function () {\r\n    item.data.locked = false;\r\n    item.sync();\r\n    game.tween(item, 'doorOpenX', {\r\n      onComplete: function (item) {\r\n        console.log(\"Close\", item);\r\n        item.closing = true;\r\n        item.opening = false;\r\n        item.data.open = false;\r\n        item.sync();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  item.closeDoor = function (item) {\r\n    item.data.open = false;\r\n    item.sync();\r\n    console.error(\"CLOSE\", this, item)\r\n    game.tween(item, 'doorCloseX', {\r\n      noXY: true,\r\n      onComplete: function () { }\r\n    });\r\n  }\r\n\r\n  item.openDoor = function (item, before, after) {\r\n\r\n    if (after.open && item.tweenName != 'doorOpenX') {\r\n      game.tween(item, 'doorOpenX', {\r\n        noXY: true,\r\n        onComplete: item.closeDoor\r\n      });\r\n    }\r\n  }\r\n\r\n  item.canUnlock = function (item, before, after) {\r\n    if (before.locked == true && after.locked == false) {\r\n      item.light.destroy();\r\n      var myLight = new Sprite('container_2_light', { anchor: 'center' });\r\n      myLight.x = item.width \/ 2;\r\n      myLight.y = item.height \/ 2 + 15;\r\n      myLight.x -= 10;\r\n      myLight.y -= 8;\r\n      myLight.filters = [game.render.filters.bloom]\r\n\r\n      item.addChild(myLight);\r\n    }\r\n  }\r\n\r\n  item.events.onUpdate = function (item, before, after) {\r\n    item.canUnlock(item, before, after);\r\n    item.openDoor(item, before, after);\r\n  }\r\n}"
        }
    }
}