{
    "name": "Keyboard Input",
    "codename": "component_keyboard_input",
    "value": "0",
    "quantity": "0",
    "credits_shop_item": "0",
    "type": "component_inputs",
    "color": "#202327",
    "editedtime": "1680775785",
    "vars": {
        "options": "'text, onChange'",
        "getElement": "function(options) {\r\n  if (options == undefined) {\r\n    options = {};\r\n  }\r\n\r\n  options.w = options.w || 300;\r\n\r\n  const pane = new UIContainer('component_keyboard_input');\r\n  pane.id = game.randID();\r\n  \r\n\r\n  let selector = pane.id;\r\n\r\n  let existing = $(\"#\" + selector);\r\n  if (existing) {\r\n    existing.remove();\r\n  }\r\n\r\n  let defaultText = options.text || \"Im here\";\r\n\r\n  $(\"body\").append(`\r\n\t<input type='text' style='z-index:10000;display:block;position:absolute;top:0; left:-1000px'\r\n\t id=\"${selector}\" value=\"${defaultText}\"\r\n\t>\r\n  `);\r\n\r\n  let elem = $(\"#\" + selector);\r\n\r\n  \r\n  const container = new UIContainer();\r\n  pane.addChild(container);\r\n\r\n  const showBox = game.render.componentRaw('drawSlimPane', {w: options.w, h: 32});\r\n  showBox.alpha = 0;\r\n  container.addChild(showBox);\r\n  container.x = -20;\r\n  container.y = -16;\r\n\r\n  const textLabel = game.render.text(\"null\", 'info-tagline');\r\n  textLabel.anchor.set(0);\r\n  textLabel.x = 16;\r\n  textLabel.y = 6;\r\n\r\n  \r\n\r\n  textLabel.isInteractive();\r\n  textLabel.on('pointerdown', (e) => {\r\n    showBox.alpha = 1;\r\n    elem[0].selectionStart = elem[0].selectionEnd = elem[0].value.length;\r\n    elem.isActive = true;\r\n    onChange(e);\r\n    game.input.kbInputMode = true;\r\n\r\n    setTimeout(() => {\r\n      textLabel.isInteractive(); \/\/Rebind for size\r\n      \r\n      elem.focus();\r\n      elem.change();\r\n\r\n    }, 100);\r\n  });\r\n\r\n  const insert_at = function (index, str, add) {\r\n    if (isNaN(index)) {\r\n      return str + add;\r\n    } else {\r\n      return str.substr(0, index) + add + str.substr(index);\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    if (elem.isActive) {\r\n      const position = e.target.selectionStart;\r\n      textLabel.text = insert_at(position, elem.val(), \"|\");\r\n    } else {\r\n      textLabel.text = elem.val();\r\n    }\r\n    if (typeof options.onChange == \"function\") {\r\n      options.onChange(textLabel.text);\r\n    }\r\n  }\r\n\r\n  elem.on('keydown', onChange);\r\n  elem.on('keyup', onChange);\r\n  elem.on('change', onChange);\r\n\r\n  const onFocusOut = (e) => {\r\n    textLabel.isInteractive();\r\n    game.input.kbInputMode = false;\r\n    elem.isActive = false;\r\n    onChange(e);\r\n    onChange(e);\r\n    showBox.alpha = 0;\r\n  }\r\n\r\n  elem.on('focusout', onFocusOut);\r\n  onChange({});\r\n  textLabel.isInteractive();\r\n\r\n  container.addChild(textLabel);\r\n  return pane;\r\n}",
        "destroyElement": "function() {\r\n    console.log(\"Destroy\", this.id);\r\n    $(\"#\" + this.id).remove();\r\n}"
    }
}