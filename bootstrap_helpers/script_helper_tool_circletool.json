{
    "name": "Circle Tool",
    "codename": "script_helper_tool_circletool",
    "value": "0",
    "quantity": "0",
    "credits_shop_item": "0",
    "type": "bootstrap_helpers",
    "color": "#202327",
    "editedtime": null,
    "vars": {
        "exec": "function() {\r\n\r\n  game.buildTools = {};\r\n  game.buildTools.blocks = {};\r\n  game.buildTools.rad = 10;\r\n\r\n  game.input.on('b', function () {\r\n    game.buildTools.rad = Math.min(10, game.buildTools.rad + 0.165);\r\n  });\r\n\r\n  game.input.on('c', function () {\r\n    game.buildTools.commit();\r\n  });\r\n\r\n  game.input.on('s', function () {\r\n    game.buildTools.rad = Math.max(0, game.buildTools.rad - 0.165);\r\n  });\r\n\r\n  game.setTicker('tool', function () {\r\n    if (game.buildTools && !game.buildTools.active) {\r\n      return false;\r\n    }\r\n\r\n    game.buildTools.refresh.call(game.buildTools);\r\n  });\r\n\r\n  game.buildTools.floodFill = function (x, y, callback, known) {\r\n\r\n    let key = x + \"-\" + y;\r\n\r\n    if (known[key]) {\r\n      return; \/\/Processed this cell already\r\n    }\r\n\r\n    known[key] = true;\r\n\r\n    callback(x, y);\r\n\r\n    let n = game.buildTools.floodFill(x, y - 1, callback, known);\r\n    let e = game.buildTools.floodFill(x + 1, y, callback, known);\r\n    let s = game.buildTools.floodFill(x, y + 1, callback, known);\r\n    let w = game.buildTools.floodFill(x - 1, y, callback, known);\r\n\r\n  }\r\n\r\n  game.buildTools.drawCircle = function (x, y, rad, callback, iterations) {\r\n    iterations = iterations || 1;\r\n    let deg = 0;\r\n    let blocked = {};\r\n    for (let i = 0; i < 360; i += 360 \/ iterations) {\r\n      deg++;\r\n      let angleX = Math.floor(x + rad * Math.cos(deg));\r\n      let angleY = Math.floor(y + rad * Math.sin(deg));\r\n      let key = angleX + \"-\" + angleY;\r\n      if (blocked[key]) {\r\n        continue;\r\n      }\r\n      callback(angleX, angleY);\r\n      blocked[key] = true;\r\n    }\r\n  }\r\n\r\n  game.buildTools.commit = function () {\r\n\r\n\r\n\r\n    if (!game.buildTools.timeout) {\r\n      game.grid.allowUndo(); \/\/First time so safe to set undoable\r\n\r\n    } else {\r\n      clearTimeout(game.buildTools.timeout);\r\n    }\r\n\r\n    game.buildTools.timeout = setTimeout(function () { game.grid.forceResolve(); game.buildTools.timeout = false; }, 250);\r\n\r\n    let keys = Object.keys(game.buildTools.blocks);\r\n    for (let i = 0; i < keys.length; i++) {\r\n      game.grid.updateTile(\r\n        game.gridPos(game.buildTools.blocks[keys[i]].x),\r\n        game.gridPos(game.buildTools.blocks[keys[i]].y),\r\n        game.buildTools.tileAcross, game.buildTools.tileDown,\r\n        game.drawLayer);\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  game.buildTools.toggleCircle = function () {\r\n    if (game.buildTools.mode === 'circle') {\r\n      game.buildTools.stopCircle();\r\n    } else {\r\n      game.buildTools.circle();\r\n    }\r\n  }\r\n\r\n  game.buildTools.stopCircle = function () {\r\n    game.buildTools.active = false;\r\n    game.buildTools.mode = 'none';\r\n  }\r\n\r\n  game.buildTools.circle = function () {\r\n\r\n    game.buildTools.active = true;\r\n    game.buildTools.mode = 'circle';\r\n\r\n    game.buildTools.newBlock = function (x, y) {\r\n\r\n      let key = x + \"-\" + y;\r\n\r\n      let block = new Sprite('uiicon_degraded');\r\n      block.x = game.atGridPos(x);\r\n      block.y = game.atGridPos(y);\r\n      game.render.aboveLife.addChild(block);\r\n\r\n      game.buildTools.blocks[key] = block;\r\n    }\r\n\r\n    game.buildTools.refresh = function () {\r\n\r\n      let x = game.mouseX;\r\n      let y = game.mouseY;\r\n      let gridX = game.gridPos(x);\r\n      let gridY = game.gridPos(y);\r\n\r\n      let keys = Object.keys(game.buildTools.blocks);\r\n\r\n      for (let i = 0; i < keys.length; i++) {\r\n        game.buildTools.blocks[keys[i]].destroy();\r\n      }\r\n\r\n      game.buildTools.blocks = [];\r\n\r\n      game.buildTools.drawCircle(gridX, gridY, game.buildTools.rad, game.buildTools.newBlock, 360);\r\n\r\n\r\n      game.buildTools.floodFill(gridX, gridY, game.buildTools.newBlock, game.buildTools.blocks)\r\n\r\n    }\r\n\r\n  }\r\n\r\n}"
    }
}