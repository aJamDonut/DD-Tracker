{
    "name": "Multi Pawn Positioner",
    "codename": "script_helper_positions",
    "value": "0",
    "quantity": "0",
    "credits_shop_item": "0",
    "type": "bootstrap_helpers",
    "color": null,
    "editedtime": null,
    "vars": {
        "exec": "function() {\r\n\r\n  game.pawnMover = {};\r\n  \r\n  game.pawnMover.check = function(x, y, cache) {\r\n\tif(cache[x+\"_\"+y]) {\r\n\t\treturn false;\r\n    }\r\n    if(game.grid.isBlocked(x, y)) {\r\n\t\treturn false;\r\n    }\r\n    return true;\r\n  }\r\n  \r\n  game.pawnMover.cache = {};\r\n  game.pawnMover.positions = [];\r\n  \r\n  game.setTicker('pawn-positioner', function(){\r\n    \r\n    mouseX = game.screenMouseX;\r\n    mouseY = game.screenMouseY;\r\n    \r\n    grid = game.render.viewport.toWorld(mouseX, mouseY);\r\n    \r\n    grid.x = game.gridPos(grid.x);\r\n    grid.y = game.gridPos(grid.y);\r\n    \r\n    if(grid.x == game.pawnMover.lastX && grid.y == game.pawnMover.lastY) {\r\n\t\treturn false; \/\/Same position as last time\r\n    }\r\n    game.pawnMover.lastX = grid.x;\r\n    game.pawnMover.lastY = grid.y;\r\n    \r\n    worldX = game.atGridPos(grid.x);\r\n    worldY = game.atGridPos(grid.y);\r\n    let pawns = game.session.getSelectedPawns();\r\n    let pawnCount = Object.keys(pawns).length;\r\n    \r\n    if(pawnCount === 0) {\r\n\t\treturn false;\r\n    }\r\n    \r\n    let posX = grid.x;\r\n    let posY = grid.y;\r\n    let dir = 'left';\r\n    let cache = game.pawnMover.cache;\r\n    let cacheKeys = Object.keys(cache);\r\n    \r\n    for(let i = 0; i < cacheKeys.length; i++) {\r\n      cache[cacheKeys[i]].alpha  =0;\r\n\t\tcache[cacheKeys[i]].destroy();\r\n    }\r\n    \r\n    game.pawnMover.cache = {};\r\n    cache = {};\r\n    game.pawnMover.positions = [];\r\n    \r\n    let i = -1;\r\n    while(pawnCount > 0) {\r\n      \ti++;\r\n \t\t\r\n      \tif(game.pawnMover.check(posX, posY, game.pawnMover.cache)) {\r\n\t\t\t\/\/This is free\r\n          \tlet square1 = new UIPane();\r\n          \tsquare1.alpha = 0;\r\n          \tgame.pawnMover.cache[posX+\"_\"+posY] = square1;\r\n            \/\/game.render.objectLayer.addChild(square1);\r\n\r\n            square1.x = game.atGridPos(posX);\r\n            square1.y = game.atGridPos(posY);\r\n            square1.width = 64;\r\n            square1.height = 64;\r\n          \r\n          \tgame.pawnMover.positions.push({x: game.atGridPos(posX), y: game.atGridPos(posY)});\r\n          \r\n          \t\/*let text1 = (game.render.text(pawnCount+\" (\"+i+\")\", 'button-text-green'));\r\n          \ttext1.x = square1.x;\r\n          \ttext1.y = square1.y;\r\n          \tgame.render.objectLayer.addChild(text1);\r\n            game.pawnMover.cache[posX+\"_\"+posY+\"text\"] = text1;\r\n          \t*\/\r\n          \r\n\t\t\tpawnCount--;\r\n        }\r\n      \r\n      \tif(dir == 'left') {\r\n          \r\n          if(game.pawnMover.check(posX, posY-1, game.pawnMover.cache)) {\r\n            posY--;\r\n            dir = 'up';\r\n            continue;\r\n          }\r\n          \r\n          if(game.pawnMover.check(posX-1, posY, game.pawnMover.cache)) {\r\n            posX--;\r\n          \tcontinue;\r\n          } else {\r\n\t\t\tdir = 'up';\r\n            posY++;\r\n            continue;\r\n          }\r\n          \r\n          \r\n        }\r\n      \r\n        if(dir == 'up') {\r\n\r\n          if(game.pawnMover.check(posX+1, posY, game.pawnMover.cache)) {\r\n            posX++;\r\n            dir = 'right';\r\n            continue;\r\n          }\r\n          if(game.pawnMover.check(posX, posY-1, game.pawnMover.cache)) {\r\n            posY--;\r\n          \tcontinue;\r\n          } else {\r\n\t\t\tdir = 'right';\r\n            posX++;\r\n            continue;\r\n          }\r\n        }\r\n      \r\n      if(dir == 'right') {\r\n\r\n        if(game.pawnMover.check(posX, posY+1, game.pawnMover.cache)) {\r\n          posY++;\r\n          dir = 'down';\r\n          continue;\r\n        }\r\n        if(game.pawnMover.check(posX+1, posY, game.pawnMover.cache)) {\r\n          posX++;\r\n          continue;\r\n        } else {\r\n          dir = 'down';\r\n          posY++;\r\n          continue;\r\n        }\r\n      }\r\n      \r\n      if(dir == 'down') {\r\n\r\n          if(game.pawnMover.check(posX-1, posY, game.pawnMover.cache)) {\r\n            posX--;\r\n            dir = 'left';\r\n            continue;\r\n          }\r\n        }\r\n      \tif(game.pawnMover.check(posX, posY+1, game.pawnMover.cache)) {\r\n            posY++;\r\n          \tcontinue;\r\n          } else {\r\n\t\t\tdir = 'left';\r\n            posX--;\r\n            continue;\r\n          }\r\n      \r\n    }\r\n  });\r\n}\r\n"
    }
}