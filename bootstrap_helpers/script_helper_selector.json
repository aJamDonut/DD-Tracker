{
    "name": "Multi Pawn Selector",
    "codename": "script_helper_selector",
    "value": "0",
    "quantity": "0",
    "credits_shop_item": "0",
    "type": "bootstrap_helpers",
    "color": null,
    "editedtime": null,
    "vars": {
        "exec": "function() {\r\n\r\n  game.pawnSelector = {};\r\n  \r\n  game.pawnSelector.getPawns = function() {\r\n\r\n    let startX = this.x;\r\n    let endX = this.endX;\r\n    \r\n    let startY = this.y;\r\n    let endY = this.endY;\r\n    \r\n    \/\/Flip start\/end\r\n    if(this.endX < startX) {\r\n\t\tstartX = this.endX;\r\n      \tendX = this.x;\r\n    }\r\n    \r\n    if(this.endY < startY) {\r\n\t\tstartY = this.endY;\r\n      \tendY = this.y;\r\n    }\r\n    \r\n    let worldStart = game.render.viewport.toWorld(startX, startY);\r\n    let worldEnd = game.render.viewport.toWorld(endX, endY);\r\n    \r\n    \r\n    \r\n    let pawns = game.session.getPlayerPawns();\r\n    let ids = Object.keys(pawns);\r\n    let cleared = false;\r\n    for(let i = 0; i < ids.length; i++) {\r\n      let pawn = pawns[ids[i]];\r\n      if(game.simpleCollision(pawn, {x:worldStart.x, y:worldStart.y, width:worldEnd.x-worldStart.x, height:worldEnd.y-worldStart.y})) {\r\n        if(!cleared) {\r\n          \/\/Empty on first one (this ensures one is always selected)\r\n          game.session.deselectPawns();\r\n          cleared = true;\r\n        }\r\n\t\tgame.session.selectPawn(pawn);\r\n      }\r\n    }\r\n    \r\n  }\r\n  \r\n  game.pawnSelector.square = false;\r\n  \r\n  game.ee.on('world-leftclick-down', function(){\r\n    game.pawnSelector.down = true;\r\n    game.pawnSelector.x = game.screenMouseX;\r\n    game.pawnSelector.y = game.screenMouseY;\r\n  });\r\n  \r\n  game.ee.on('leftclick-up', function(){\r\n    game.pawnSelector.down = false;\r\n    if(game.pawnSelector.square) {\r\n\t\t\/\/Create new square\r\n      \tgame.pawnSelector.square.destroy();\r\n      \tgame.pawnSelector.square = false;\r\n    }\r\n  });\r\n  \r\n  game.setTicker('pawn_pawnSelector', function(){\r\n  \r\n    if(!game.pawnSelector.down) {\r\n\t\treturn false; \/\/Not now\r\n    }\r\n    \r\n    game.pawnSelector.endX = game.screenMouseX;\r\n    game.pawnSelector.endY = game.screenMouseY;\r\n    \r\n    if(!game.pawnSelector.square) {\r\n\t\t\/\/Create new square\r\n      \tgame.pawnSelector.square = new UIPane();\r\n      \tlet innerPane = new UIPane({fill:0xffffff});\r\n      \tgame.pawnSelector.square.addChild(innerPane);\r\n      \tinnerPane.x = 5;\r\n      \tinnerPane.y = 5;\r\n      \tinnerPane.width = game.pawnSelector.square.width;\r\n      \tinnerPane.height = game.pawnSelector.square.height;\r\n      \tgame.pawnSelector.square.alpha = 0.2;\r\n      \tgame.render.aboveAll.addChild(game.pawnSelector.square);\r\n    }\r\n    \r\n    game.pawnSelector.square.x = game.pawnSelector.x;\r\n    game.pawnSelector.square.y = game.pawnSelector.y;\r\n    game.pawnSelector.square.width = game.pawnSelector.endX - game.pawnSelector.x;\r\n    game.pawnSelector.square.height = game.pawnSelector.endY - game.pawnSelector.y;\r\n  \t\r\n    \r\n    if(game.pawnSelector.square.width < 10 && game.pawnSelector.square.height < 10) {\r\n\t\t\/\/Too small to change selections\r\n\t\treturn;\r\n    }\r\n    \r\n    try {\r\n    \tgame.pawnSelector.getPawns();\r\n    } catch(e) {\r\n\t\tconsole.error(e);\r\n    }\r\n    \r\n  });\r\n\r\n}"
    }
}