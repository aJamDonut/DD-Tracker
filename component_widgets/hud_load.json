{
    "name": "Hud Load Game",
    "codename": "hud_load",
    "value": "0",
    "quantity": "0",
    "credits_shop_item": "0",
    "type": "component_widgets",
    "color": "#202327",
    "editedtime": "1674359712",
    "vars": {
        "getElement": "function(options) {\r\n\r\n  var loadFiles = {\r\n    current: {},\r\n  \tslot1: {},\r\n    slot2: {},\r\n    slot3: {},\r\n    slot4: {},\r\n    slot5: {},\r\n    slot6: {},\r\n    slot7: {},\r\n  };\r\n  \r\n  if(!options) {\r\n\toptions = {};\r\n  }\r\n  \r\n  if(!options.title) {\r\n\toptions.title = 'New Game';\r\n    options.type = 'load';\r\n  }\r\n\r\n  \r\n  \r\n  if(!game.globalfs.keyExists('loadfiles')) {\r\n\t\/\/create load files\r\n    game.globalfs.saveSync('loadfiles', loadFiles);\r\n  }\r\n  \r\n  loadFiles = game.globalfs.loadSync('loadfiles');\r\n  \r\n  console.log(\"files\", loadFiles);\r\n  \r\n  var w = 500;\r\n  var pane = game.render.componentRaw('drawBoxPane', {title: false, moveable:false, showX: true, w: w, h: 710});\r\n  \r\n  var container = new UIContainer();\r\n  pane.addChild(container);\r\n  container.x = 30;\r\n  container.y = 20;\r\n\r\n    \r\n  if(options.type == 'new') {\r\n\r\n  \tvar mapSelect = game.render.componentRaw('component_mapselector', {title: false});\r\n    mapSelect.x = w + 10;\r\n    mapSelect.y = 10;\r\n    container.addChild(mapSelect);\r\n    \r\n    var raceSelect = game.render.componentRaw('component_raceselector', {title: 'Start zone'});\r\n    raceSelect.x = w + 10;\r\n    raceSelect.y = mapSelect.y + mapSelect.height-5;\r\n    container.addChild(raceSelect);\r\n    \/\/component_mapselector\r\n    \r\n    var difficulty = game.render.componentRaw('component_difficulty_toggles', {title: 'Difficulty'});\r\n    difficulty.x = w + raceSelect.width + 40;\r\n    difficulty.y = 10;\r\n    container.addChild(difficulty);\r\n    \/\/component_mapselector\r\n    \r\n  }\r\n  \r\n\r\n  \r\n    var column = new TickerContainer(options, function(item){   \r\n      let page = 1;\r\n\r\n      if(this.pager && this.pager.pages) {\r\n        page = this.pager.pages.page;\r\n      }\r\n\r\n      let list = [];\r\n      for(var slot in game.grid.saveGames) {\r\n        if(!Object.keys(game.grid.saveGames[slot]).length) {\r\n\t\t\tcontinue; \/\/skkip empties\r\n        }\r\n        try {\r\n          list.push(game.render.componentRaw('drawLoadFile', {slot: slot, type: options.type, loadFile: game.grid.saveGames[slot]}));\r\n        } catch(e) {\r\n          console.error(e);\r\n        }\r\n      }\r\n      \r\n      let pager = game.render.componentRaw('pager', {rowHeight: 50, ticks: true, page: page, width:w-50, items:list.reverse(), itemsPerPage:8});\r\n\r\n      if(this.pager) {\r\n\t\tthis.pager.destroy();\r\n      }\r\n      \r\n      this.pager = pager;\r\n      this.addChild(pager)\r\n\r\n\r\n    }, 0.25);\r\n  \r\n  \tcolumn.x = 20;\r\n  \tcolumn.y = 20;\r\n  \r\n  \tpane.addChild(column);\r\n  \r\n  \r\n  \treturn pane;\r\n  }"
    }
}