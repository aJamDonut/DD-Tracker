{
    "name": "Life Inventory",
    "codename": "life_inventory",
    "value": "0",
    "quantity": "0",
    "credits_shop_item": "0",
    "type": "component_widgets",
    "color": "#202327",
    "editedtime": "1678057326",
    "vars": {
        "getElement": "function(life) {\r\n            if(life == undefined){\r\n                life = new LifeObject();\r\n            }\r\n\r\n            var offsetX = 17.5;\r\n            var offsetY = 80;\r\n            var xGap = 125;\r\n            var yGap = 125;\r\n            var title = life.data.name || 'Inventory';\r\n\r\n            var closeCleanup = function(callerObject) {\r\n                var indexName = 'life_inventory';\r\n                var indexKey = 'container'+callerObject.id;\r\n                game.index.removeFromIndex(indexName, indexKey, false);\r\n            }\r\n\r\n            var pane = game.render.componentRaw('drawBoxPane', {onTop: true, moveable:true, showX: true, name:'test', callerObject: life, title: title, w:460, h:460, onClose: closeCleanup});\r\n            \r\n            \r\n            game.lastLifeInventory = life.inventory.main;\r\n\r\n            \/\/If clicked, set this to active inventory\r\n            pane.life = life;\r\n            pane.isInteractive();\r\n            pane.on('pointerdown', function(){\r\n                \/\/If it's not the same life, then keep it active\r\n                game.lastLifeInventory = this.life.inventory.main;\r\n                \r\n            });\r\n\r\n            let edgeCase1 =  new TickerContainer({life: life, pane: pane}, function(options){\r\n\r\n                \/\/EDGE CASE: [1] When player is dead or not knocked out, and not owned. Close inventory\r\n                if(!game.session.isPlayerPawn(options.life) && !options.life.data.dead && !options.life.data.ko && !game.editMode) {\r\n                    options.pane.close.emit('pointerup'); \/\/Press the X button\r\n                }\r\n                \/\/ENDEDGE CASE: [1]\r\n\r\n            }, 1);\r\n\r\n            pane.addChild(edgeCase1); \/\/Add edge case to parent so that it's cleaned up automagically\r\n\r\n\r\n            if(game.session.isPlayerPawn(life)) {\r\n                var stat =  new TickerContainer({}, function(){\r\n                    if(this.stat) {\r\n                        this.stat.destroy();\r\n                    }\r\n                    this.stat = game.render.component('moneyLabel', {value: game.session.data.cash});\r\n                    this.addChild(this.stat);\r\n                }, 0.5);\r\n                stat.x = 20;\r\n                stat.y = 30;\r\n                pane.addChild(stat);\r\n            }\r\n\r\n            let label =  new TickerContainer({life: life, pane: pane}, function(options){\r\n\r\n                if(this.label) {\r\n                    this.label.destroy();\r\n                }\r\n                options.life.data.stats.maxWeight = options.life.data.stats.maxWeight || 50;\r\n                this.label = game.render.componentRaw('drawLabel', {name:'Weight (kg)', value: options.life.data.stats.weight+'\/'+options.life.getMaxWeight(), h:35, w: 230});\r\n                this.addChild(this.label);\r\n            }, 1);\r\n\r\n            label.x = offsetX+180;\r\n            label.y = 25;\r\n            pane.addChild(label);\r\n      \r\n            var inv = game.ui.displayInventoryAsSlot('WEAPON', life.inventory.weapon)\r\n            inv.x = offsetX;\r\n            inv.y = offsetY;\r\n            pane.addChild(inv);\r\n      \r\n            var inv = game.ui.displayInventoryAsSlot('HEAD', life.inventory.mask)\r\n            inv.x = offsetX+xGap;\r\n            inv.y = offsetY;\r\n            pane.addChild(inv);\r\n\r\n            var inv = game.ui.displayInventoryAsSlot('BRAIN', life.inventory.brain); \r\n            \r\n\r\n            inv.x = offsetX+xGap+xGap-30;\r\n            inv.y = offsetY;\r\n            pane.addChild(inv);\r\n            \r\n      \r\n            var inv = game.ui.displayInventoryAsSlot('BACK WEAPON', life.inventory.backWeapon)\r\n            inv.x = offsetX;\r\n            inv.y = offsetY+yGap;\r\n            pane.addChild(inv);\r\n      \r\n            var inv = game.ui.displayInventoryAsSlot('BODY', life.inventory.body)\r\n            inv.x = offsetX+xGap;\r\n            inv.y = offsetY+yGap;\r\n            pane.addChild(inv);\r\n\r\n            var inv = game.ui.displayInventoryAsSlot('HANDS', life.inventory.hands)\r\n            inv.x = offsetX+xGap+xGap-30;\r\n            inv.y = offsetY+yGap;\r\n            pane.addChild(inv);\r\n      \r\n            var inv = game.ui.displayInventoryAsSlot('BACKPACK', life.inventory.backPack)\r\n            inv.x = offsetX;\r\n            inv.y = offsetY+yGap+yGap;\r\n            pane.addChild(inv);\r\n\r\n            var inv = game.ui.displayInventoryAsSlot('LEGS', life.inventory.legs)\r\n            inv.x = offsetX+xGap;\r\n            inv.y = offsetY+yGap+yGap;\r\n            pane.addChild(inv);\r\n      \r\n      \r\n            var inv = game.ui.displayInventoryAsSlot('INVENTORY', life.inventory.main)\r\n            inv.x = offsetX+xGap+xGap+xGap-60;\r\n            inv.y = offsetY;\r\n            pane.addChild(inv);\r\n\r\n            var hudButton = game.render.componentRaw('hud_button', {name: 'Backpack', w: 130});\r\n            hudButton.x = inv.x - 50;\r\n            hudButton.y = offsetY + 260;\r\n            hudButton.alpha = 0.5;\r\n            pane.addChild(hudButton);\r\n            hudButton.isInteractive();\r\n            hudButton.on('pointerup', function(){\r\n                game.p.showInventory();\r\n            });\r\n\r\n            var hudButton = game.render.componentRaw('hud_button', {name: 'Mods', w: 130});\r\n            hudButton.x = inv.x - 50;\r\n            hudButton.y = offsetY + 260 + 50;\r\n\r\n            pane.addChild(hudButton);\r\n            hudButton.isInteractive();\r\n            hudButton.on('pointerup', function(){\r\n                game.p.showInventory();\r\n            });\r\n\r\n            \/*\r\n                Creates list of items\r\n            for(itemName in game.data.items.weapons) {\r\n              item = game.data.items.weapons[itemName];\r\n              var shotgun = new VanillaItem(item.name, item.sprite);\r\n              shotgun.description = item.description;\r\n              shotgun.x = 25;\r\n              shotgun.y = 500;\r\n              shotgun.stats = item.stats;\r\n              shotgun.data.blockWidth=item.blockWidth;\r\n              shotgun.data.blockHeight=item.blockHeight;\r\n              game.inventories.attachInventoryFuncs(shotgun);\r\n              game.render.aboveAll.addChild(shotgun);\r\n              \r\n            }*\/\r\n            return pane;\r\n        }"
    }
}