{
    "name": "Item Created",
    "codename": "se_itemcontainer_created",
    "value": "0",
    "quantity": "0",
    "credits_shop_item": "0",
    "type": "bootstrap_events",
    "color": "#202327",
    "editedtime": null,
    "vars": {
        "exec": "function() {\r\n  game.ee.on('itemcontainer_created', function (item) {\r\n\r\n    if (!game.editMode && (!item.meta || !item.meta.contextOptions) && (!item.contextMenus || !Object.keys(item.contextMenus).length)) {\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    item.isInteractive();\r\n\r\n    item.on('pointerover', function (e) {\r\n      this.filters = [new PIXI.filters.OutlineFilter(2, 0x99ff99)];\r\n    });\r\n\r\n    item.on('pointerout', function (e) {\r\n      this.filters = []\r\n    });\r\n\r\n    item.on('pointerup', function (e) {\r\n      game.select(this);\r\n      if (game.input.isRightClick(e)) {\r\n        e.stopPropagation();\r\n        var contextMenuLinks = {}\r\n        console.log(this);\r\n        var name = this.name || this.data.name || this.readName || this.codename || 'Container';\r\n\r\n        if (game.editMode) {\r\n\r\n          contextMenuLinks[name] = function (caller) {\r\n            console.log(\"Open context for\", caller);\r\n            caller.settingsContainer = game.render.componentRaw('settings_dialog', {\r\n              callerObject: caller,\r\n              settings: [\r\n                'id',\r\n                'codename',\r\n                'group',\r\n                'blockX',\r\n                'blockY',\r\n                'persist',\r\n                'persistId',\r\n                'class',\r\n                'locked',\r\n                'alpha',\r\n                'spriteName',\r\n                'physicsType',\r\n                'usedata1',\r\n                'usedata2',\r\n                'usedata3'\r\n              ]\r\n            });\r\n            game.render.aboveAll.addChild(caller.settingsContainer);\r\n          }\r\n\r\n          contextMenuLinks['Clone'] = function (caller) {\r\n            game.util.placeObject(caller);\r\n          }\r\n\r\n          contextMenuLinks['Delete'] = function (caller) {\r\n            caller.markDelete();\r\n          }\r\n\r\n\r\n\r\n          \r\n\r\n          if (this.meta.contextOptions && this.meta.contextOptions.includes('loot')) {\r\n            contextMenuLinks['[A] Open'] = function (caller) {\r\n              caller.showInventory();\r\n            }\r\n          }\r\n\r\n        }\r\n\r\n        if (this.meta.contextOptions && this.meta.contextOptions.includes('loot')) {\r\n          contextMenuLinks['Open'] = function (caller) {\r\n            console.log(\"Trigger loot\", caller.id)\r\n            game.p.data.command = 'loot';\r\n            game.p.data.do = 'opencontainer';\r\n            game.p.data.gotoId = caller.id;\r\n\r\n            game.world.sync(game.p);\r\n          }\r\n        }\r\n\r\n        if (this.meta.contextOptions && this.meta.contextOptions.includes('gather')) {\r\n          contextMenuLinks['Gather'] = function (caller) {\r\n            if (game.world.cDistance(game.p, caller) > 11000 && !game.editMode) {\r\n              game.input.mouseMsg('Too far away');\r\n            } else {\r\n              game.p.data.do = 'gather';\r\n              game.p.data.gatherId = caller.id;\r\n              game.world.sync(game.p);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.meta.contextOptions && this.meta.contextOptions.includes('hack')) {\r\n          contextMenuLinks['Hack'] = function (caller) {\r\n            if (game.world.cDistance(game.p, caller) > 115) {\r\n              game.input.mouseMsg('Too far away');\r\n            } else {\r\n              \/\/Do hackage\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.meta.contextOptions && this.meta.contextOptions.includes('use')) {\r\n          contextMenuLinks['Use'] = function (caller) {\r\n\r\n            game.p.data.do = 'useitem';\r\n            game.p.data.gotoId = caller.id;\r\n            game.world.sync(game.p);\r\n\r\n          }\r\n        }\r\n\r\n\r\n        if (this.meta.contextOptions && this.meta.contextOptions.includes('pickup')) {\r\n          contextMenuLinks['Pick up'] = function (caller) {\r\n            if (game.world.cDistance(game.p, caller) > 115) {\r\n              game.input.mouseMsg('Too far away');\r\n            } else {\r\n              \/\/Pickup\r\n            }\r\n          }\r\n        }\r\n\r\n        console.log(this);\r\n\r\n        if (this.contextMenus) {\r\n          contextMenuLinks = game.merge(contextMenuLinks, this.contextMenus);\r\n        }\r\n\r\n        if (Object.keys(contextMenuLinks).length == 0) {\r\n          \/\/No context menus\r\n          return false;\r\n        }\r\n\r\n        var contextMenu = game.render.componentRaw('context_menu', {\r\n          callerObject: this, links: contextMenuLinks\r\n        });\r\n\r\n        game.render.aboveAll.addChild(contextMenu);\r\n        var updateTo = game.render.viewport.toScreen(contextMenu.x, contextMenu.y);\r\n        contextMenu.x = updateTo.x;\r\n        contextMenu.y = updateTo.y;\r\n        return false;\r\n      }\r\n    });\r\n  });\r\n}"
    }
}