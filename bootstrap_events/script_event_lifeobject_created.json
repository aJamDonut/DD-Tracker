{
    "name": "Life Created",
    "codename": "script_event_lifeobject_created",
    "value": "0",
    "quantity": "0",
    "credits_shop_item": "0",
    "type": "bootstrap_events",
    "color": "#202327",
    "editedtime": "1679151715",
    "vars": {
        "exec": "function() {\r\n  game.ee.on('lifeobject_created', function (life) {\r\n    life.on('pointerup', function () {\r\n      game.select(this);\r\n    });\r\n  });\r\n\r\n  game.ee.on('lifeobject_created', function (life) {\r\n    life.isInteractive();\r\n\r\n    life.on('pointerover', function (e) {\r\n      this.filters = [new PIXI.filters.OutlineFilter(2, 0x99ff99)];\r\n    });\r\n\r\n    life.on('pointerout', function (e) {\r\n      this.filters = []\r\n    });\r\n\r\n    life.on('pointerup', function (e) {\r\n      if (this.lastClick > Date.now() - 400) {\r\n        \/\/Double click\r\n        if (game.input.isLeftClick(e) && game.session.isPlayerPawn(this)) {\r\n          game.cameraFollow = this;\r\n        }\r\n      }\r\n\r\n      this.lastClick = Date.now();\r\n\r\n      if (game.input.isLeftClick(e) && game.session.isPlayerPawn(this)) {\r\n        game.session.deselectPawns();\r\n        game.session.setMainPawn(this);\r\n        game.session.selectPawn(this);\r\n        game.watching = this;\r\n      } else {\r\n        game.watching = this;\r\n        game.offloader.helper.world('setWatching', { id: this.id });\r\n      }\r\n\r\n\r\n\r\n      if (game.input.isRightClick(e)) {\r\n        game.audio.playSticky(this, 'ding');\r\n        var contextMenuLinks = {...this.contextMenus} || {}\r\n\r\n        if (game.editMode) {\r\n          \/\/Show settings panel\r\n          contextMenuLinks[this.data.name] = function (caller) {\r\n            var settingsContainer = game.render.componentRaw('settings_dialog', {\r\n              callerObject: caller,\r\n              settings: [\r\n                'name',\r\n                'dir',\r\n                'dialog',\r\n                'faction',\r\n                'bounty',\r\n                'dynamicLevel',\r\n                'usedata1',\r\n                'usedata2',\r\n                'usedata3',\r\n                'age',\r\n                'chr',\r\n                'str',\r\n                'spd',\r\n                'cft',\r\n                'svg',\r\n                'tgh'\r\n              ]\r\n            });\r\n            game.render.aboveAll.addChild(settingsContainer);\r\n          };\r\n        }\r\n\r\n        if (game.editMode || game.session.isPlayerPawn(this) || this.data.ko || this.data.dead) {\r\n          contextMenuLinks['Inventory'] = function (caller) {\r\n            caller.showInventory();\r\n            \/\/TODO: handle when in edit mode and no player exists\r\n            if (game.p && typeof game.p.showInventory == 'function') {\r\n              game.p.showInventory(); \/\/Show player inventory;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.data.drivingId) {\r\n          contextMenuLinks['Stop Driving'] = function (caller) {\r\n            caller.stopDriving();\r\n          }\r\n        }\r\n\r\n        if (this.data.dialog && !this.data.dead) {\r\n          contextMenuLinks['Chat'] = function (caller) {\r\n            if (!caller.data.dead) {\r\n              if (game.world.cDistance(game.p, caller) > 250) {\r\n                game.input.mouseMsg('Too far away');\r\n                return false;\r\n              }\r\n              caller.chat();\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.data.do == \"becarried\") {\r\n          contextMenuLinks['Drop'] = function (caller) {\r\n\r\n            game.p.stopCarrying(caller);\r\n\r\n          }\r\n        } else if (game.p && game.p.data.hasRope && (this.data.ko || this.data.dead)) {\r\n          contextMenuLinks['Carry'] = function (caller) {\r\n\r\n            game.p.carry(caller);\r\n\r\n          }\r\n        }\r\n\r\n        if (!game.editMode) {\r\n          contextMenuLinks['Attack'] = function (caller) {\r\n\r\n\r\n            game.session.setAllCommand('attack', { targetId: caller.id });\r\n\r\n          }\r\n\r\n        }\r\n        if (this.data.bounty && this.data.bounty > 0 && this.data.dead) {\r\n          contextMenuLinks['Take Bounty'] = function (caller) {\r\n            if (game.world.dist(game.p, caller) > 200) {\r\n              game.notify(\"Too far\");\r\n              return;\r\n            }\r\n\r\n            let item = new InventoryItem('ss_item_bountyhead');\r\n            item.data.bounty = caller.data.bounty;\r\n            item.data.name = \"Head of \" + caller.data.name;\r\n            if (game.p.inventory.main.addItemNow(item)) {\r\n              caller.data.bounty = false; \/\/Remove bounty from the item\r\n              caller.inventory.mask.addItemNow({ sprite: 'blank' });\r\n            } else {\r\n              game.notify(\"Inventory full\");\r\n            }\r\n            \/\/Distance\r\n            \/\/Create bounty item\r\n            \/\/Give item\r\n          }\r\n        }\r\n\r\n        \/\/Delete stuff when not needed\r\n        if (this.id == game.p.id) {\r\n          \/\/Is player\r\n          delete contextMenuLinks['Attack'];\r\n          delete contextMenuLinks['Chat'];\r\n        }\r\n\r\n        var contextMenu = game.render.componentRaw('context_menu', {\r\n          callerObject: this, links: contextMenuLinks\r\n        });\r\n\r\n        game.render.aboveAll.addChild(contextMenu);\r\n        var updateTo = game.render.viewport.toScreen(contextMenu.x, contextMenu.y);\r\n        contextMenu.x = updateTo.x;\r\n        contextMenu.y = updateTo.y;\r\n        return false;\r\n      }\r\n    });\r\n  });\r\n}"
    }
}